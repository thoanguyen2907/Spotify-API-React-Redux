{"ast":null,"code":"import * as configs from '../constants/Config';\n\nconst queryString = require('query-string');\n\nconst axios = require('axios');\n\nexport default class SpotifyAxios {\n  static getArtists(id) {\n    let url = configs.BASE_URL + \"artists/\" + id;\n    return axios.get(url, SpotifyAxios.config).catch(this.handleError);\n  }\n\n  static getAlbums(id) {\n    let strParams = queryString.stringify({\n      offset: 0,\n      limit: 2\n    });\n    let url = configs.BASE_URL + \"artists/\" + id + \"/albums?\" + strParams;\n    return axios.get(url, SpotifyAxios.config).catch(this.handleError);\n  }\n\n  static getAlbum(albumID) {\n    let url = configs.BASE_URL + \"albums/\" + albumID;\n    return axios.get(url, SpotifyAxios.config).catch(this.handleError);\n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}\nSpotifyAxios.config = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer ' + configs.API_KEY\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/spotify api/my-app/src/services/SpotifyAxios.js"],"names":["configs","queryString","require","axios","SpotifyAxios","getArtists","id","url","BASE_URL","get","config","catch","handleError","getAlbums","strParams","stringify","offset","limit","getAlbum","albumID","error","console","log","method","headers","API_KEY"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,eAAe,MAAME,YAAN,CAAkB;AAO9B,SAAOC,UAAP,CAAkBC,EAAlB,EAAqB;AACZ,QAAIC,GAAG,GAAGP,OAAO,CAACQ,QAAR,GAAmB,UAAnB,GAAgCF,EAA1C;AACF,WAAQH,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAcH,YAAY,CAACM,MAA3B,EAAmCC,KAAnC,CAAyC,KAAKC,WAA9C,CAAR;AACL;;AACD,SAAOC,SAAP,CAAiBP,EAAjB,EAAoB;AAChB,QAAIQ,SAAS,GAAGb,WAAW,CAACc,SAAZ,CAAsB;AAClCC,MAAAA,MAAM,EAAC,CAD2B;AAElCC,MAAAA,KAAK,EAAC;AAF4B,KAAtB,CAAhB;AAIA,QAAIV,GAAG,GAAGP,OAAO,CAACQ,QAAR,GAAmB,UAAnB,GAA+BF,EAA/B,GAAmC,UAAnC,GAA8CQ,SAAxD;AACF,WAAQX,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAcH,YAAY,CAACM,MAA3B,EAAmCC,KAAnC,CAAyC,KAAKC,WAA9C,CAAR;AACL;;AAED,SAAOM,QAAP,CAAgBC,OAAhB,EAAwB;AACtB,QAAIZ,GAAG,GAAGP,OAAO,CAACQ,QAAR,GAAmB,SAAnB,GAA6BW,OAAvC;AACF,WAAOhB,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAcH,YAAY,CAACM,MAA3B,EAAmCC,KAAnC,CAAyC,KAAKC,WAA9C,CAAP;AACC;;AACC,SAAOA,WAAP,CAAmBQ,KAAnB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AA1B8B;AAAZhB,Y,CACVM,M,GAAS;AACRa,EAAAA,MAAM,EAAC,KADC;AAERC,EAAAA,OAAO,EAAE;AACL,qBAAiB,YAAYxB,OAAO,CAACyB;AADhC;AAFD,C","sourcesContent":["import * as configs from '../constants/Config'; \nconst queryString = require('query-string');\nconst axios = require('axios');\nexport default class SpotifyAxios{\n    static config = {\n            method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              }\n        }\n   static getArtists(id){\n            let url = configs.BASE_URL + \"artists/\" + id;\n          return  axios.get(url,SpotifyAxios.config).catch(this.handleError)     \n    }\n    static getAlbums(id){\n        let strParams = queryString.stringify({\n            offset:0,\n            limit:2\n        })\n        let url = configs.BASE_URL + \"artists/\"+ id +\"/albums?\"+strParams;\n      return  axios.get(url,SpotifyAxios.config).catch(this.handleError)     \n}  \n\nstatic getAlbum(albumID){\n  let url = configs.BASE_URL + \"albums/\"+albumID;\nreturn axios.get(url,SpotifyAxios.config).catch(this.handleError)     \n}  \n  static handleError(error){\n    console.log(error)\n  }\n    }\n"]},"metadata":{},"sourceType":"module"}