{"ast":null,"code":"import * as configs from '../constants/Config';\n\nconst queryString = require('query-string');\n\nconst axios = require('axios');\n\nexport default class SpotifyAxios {\n  static getArtists(id) {\n    let url = configs.BASE_URL + \"artists/\" + id;\n    return axios.get(url, SpotifyAxios.config).catch(this.handleError); //    return  axios(url,SpotifyFetch.config)\n    //     .then((response) => response.json())        \n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}\nSpotifyAxios.config = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer ' + configs.API_KEY\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/shoptify 1/my-app/src/services/SpotifyAxios.js"],"names":["configs","queryString","require","axios","SpotifyAxios","getArtists","id","url","BASE_URL","get","config","catch","handleError","error","console","log","method","headers","API_KEY"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,eAAe,MAAME,YAAN,CAAkB;AAO9B,SAAOC,UAAP,CAAkBC,EAAlB,EAAqB;AACZ,QAAIC,GAAG,GAAGP,OAAO,CAACQ,QAAR,GAAmB,UAAnB,GAAgCF,EAA1C;AACF,WAAQH,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAcH,YAAY,CAACM,MAA3B,EAAmCC,KAAnC,CAAyC,KAAKC,WAA9C,CAAR,CAFc,CAGhB;AACA;AACH;;AACH,SAAOA,WAAP,CAAmBC,KAAnB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAf8B;AAAZT,Y,CACVM,M,GAAS;AACRM,EAAAA,MAAM,EAAC,KADC;AAERC,EAAAA,OAAO,EAAE;AACL,qBAAiB,YAAYjB,OAAO,CAACkB;AADhC;AAFD,C","sourcesContent":["import * as configs from '../constants/Config'; \nconst queryString = require('query-string');\nconst axios = require('axios');\nexport default class SpotifyAxios{\n    static config = {\n            method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              }\n        }\n   static getArtists(id){\n            let url = configs.BASE_URL + \"artists/\" + id;\n          return  axios.get(url,SpotifyAxios.config).catch(this.handleError)\n        //    return  axios(url,SpotifyFetch.config)\n        //     .then((response) => response.json())        \n    }\n  static handleError(error){\n    console.log(error)\n  }\n    }\n"]},"metadata":{},"sourceType":"module"}