{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/shoptify/spotify api/my-app/src/pages/AlbumPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SpotifyAxios from './../services/SpotifyAxios';\nimport Track from './../components/Track';\nimport { actGoAlbum } from './../actions/index';\n\nclass AlbumPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      album: null,\n      tracks: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    let {\n      match\n    } = this.props;\n    let id = match.params.id;\n    this.loadAlbum(id);\n  }\n\n  loadAlbum(id) {\n    SpotifyAxios.getAlbum(id).then(response => {\n      if (response !== undefined && response.data !== null) {\n        this.setState({\n          album: response.data\n        });\n        this.props.changeBreadcrumb(response.data.name, `/album/${response.data.id}`);\n      }\n    });\n  }\n\n  render() {\n    let album = {\n      name: '',\n      id: '',\n      images: [{\n        url: ''\n      }],\n      tracks: {\n        items: []\n      }\n    };\n    album = this.state.album !== null ? this.state.album : album;\n    return React.createElement(\"div\", {\n      className: \"panel panel-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, album.name)), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.showImage(album)), React.createElement(\"div\", {\n      className: \"col-sm-8 col-md-8 col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"List Tracks\")), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.showTracks(album.tracks.items)))))));\n  }\n\n  showImage(album) {\n    let xhml = null;\n\n    if (album.images !== null && album.images.length > 1) {\n      xhml = React.createElement(\"img\", {\n        src: album.images[1].url,\n        alt: album.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n\n    return xhml;\n  }\n\n  showTracks(items) {\n    let xhml = null;\n\n    if (items !== null && items.length > 0) {\n      xhml = items.map((item, index) => {\n        return React.createElement(Track, {\n          key: index,\n          index: index,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      });\n    }\n\n    return xhml;\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeBreadcrumb: (name, to) => {\n      dispatch(actGoAlbum(name, to));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AlbumPage);","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/spotify api/my-app/src/pages/AlbumPage.js"],"names":["React","Component","connect","SpotifyAxios","Track","actGoAlbum","AlbumPage","constructor","props","state","album","tracks","UNSAFE_componentWillMount","match","id","params","loadAlbum","getAlbum","then","response","undefined","data","setState","changeBreadcrumb","name","render","images","url","items","showImage","showTracks","xhml","length","map","item","index","mapDispatchToProps","dispatch","ownProps","to"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport SpotifyAxios from './../services/SpotifyAxios';\nimport Track from './../components/Track';\nimport {actGoAlbum} from './../actions/index'; \nclass AlbumPage extends Component {\n\tconstructor(props){\n        super(props); \n        this.state={\n\t\t\talbum:null,\n\t\t\ttracks:[]\n        }\n\t}\nUNSAFE_componentWillMount(){\n\t\tlet {match} = this.props;\n\t\tlet id = match.params.id;\n\t\tthis.loadAlbum(id)\n\t\t}\t\nloadAlbum(id){\t\n\t\t SpotifyAxios.getAlbum(id).then((response)=>{\n\t\t\t\tif(response!==undefined && response.data !== null){\n\t\t\t\tthis.setState({\n\t\t\t\t\talbum :response.data\t\t\t\t\n\t\t\t\t})\n\t\t\t\tthis.props.changeBreadcrumb(response.data.name,`/album/${response.data.id}`)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\trender() {\n let album = {name:'',id:'',images:[{url:''}],tracks:{items:[]}}\n\talbum = (this.state.album!==null)? this.state.album: album;\n        return ( \n<div className=\"panel panel-danger\">\n\t\t\t\t<div className=\"panel-heading\">\n\t\t<h3 className=\"panel-title\">{album.name}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-sm-4 col-md-4 col-lg-4\">\n\t\t\t\t\t\t\t{this.showImage(album)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-sm-8 col-md-8 col-lg-8\">\n\t\t\t\t\t\t\t<div className=\"panel panel-warning\">\n\t\t\t\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"panel-title\">List Tracks</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t\t\t\t{this.showTracks(album.tracks.items)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n        )\n\t}\n\tshowImage(album){\n\t\tlet xhml = null;\n\t\tif(album.images !== null && album.images.length > 1){\n\t\t\txhml = <img src ={album.images[1].url} alt={album.name}/>\n\t\t}\n\t\treturn xhml\n\t}\nshowTracks(items){\nlet xhml = null; \nif (items !== null && items.length > 0){\n\txhml = items.map((item,index) => {\n\t\treturn <Track key={index} index={index} item={item}/>\n\t})\n}\nreturn xhml\n}\n}\nconst mapDispatchToProps = (dispatch,ownProps)=>{\n\treturn {\n\t\tchangeBreadcrumb: (name,to)=>{\n\t\t\tdispatch(actGoAlbum(name,to))\n\t\t}\n\t}\n}\nexport default connect(null,mapDispatchToProps)(AlbumPage);"]},"metadata":{},"sourceType":"module"}