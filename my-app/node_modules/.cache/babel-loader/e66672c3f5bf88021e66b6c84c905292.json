{"ast":null,"code":"import * as configs from './../constants/Config';\n\nconst queryString = require('query-string');\n\nexport default class SpotifyFetch {\n  static getArtists(query) {\n    let strParams = queryString.stringify({\n      type: 'artist',\n      limit: 4,\n      offset: 0\n    });\n    console.log(strParams);\n    let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n    return fetch(url, SpotifyFetch.config).then(response => response.json());\n  }\n\n}\nSpotifyFetch.config = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer ' + configs.API_KEY\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/shoptify 1/my-app/src/services/SpotifyFetch.js"],"names":["configs","queryString","require","SpotifyFetch","getArtists","query","strParams","stringify","type","limit","offset","console","log","url","BASE_URL","fetch","config","then","response","json","method","headers","API_KEY"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,eAAe,MAAMC,YAAN,CAAkB;AAQ9B,SAAOC,UAAP,CAAkBC,KAAlB,EAAwB;AACpB,QAAIC,SAAS,GAAGL,WAAW,CAACM,SAAZ,CAAsB;AACjCC,MAAAA,IAAI,EAAC,QAD4B;AAEjCC,MAAAA,KAAK,EAAC,CAF2B;AAGjCC,MAAAA,MAAM,EAAC;AAH0B,KAAtB,CAAhB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACK,QAAIO,GAAG,GAAGb,OAAO,CAACc,QAAR,GAAmB,WAAnB,GAAiCT,KAAjC,GAAyC,GAAzC,GAA+CC,SAAzD;AACD,WAAQS,KAAK,CAACF,GAAD,EAAKV,YAAY,CAACa,MAAlB,CAAL,CACNC,IADM,CACAC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADb,CAAR;AAGN;;AApB4B;AAAZhB,Y,CACVa,M,GAAS;AAERI,EAAAA,MAAM,EAAC,KAFC;AAGRC,EAAAA,OAAO,EAAE;AACL,qBAAiB,YAAYrB,OAAO,CAACsB;AADhC;AAHD,C","sourcesContent":["import * as configs from './../constants/Config'; \nconst queryString = require('query-string');\n\nexport default class SpotifyFetch{\n    static config = {\n        \n            method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              }\n        }\n   static getArtists(query){\n       let strParams = queryString.stringify({\n            type:'artist',\n            limit:4,\n            offset:0\n        }\n       );\n       console.log(strParams)\n            let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n           return  fetch(url,SpotifyFetch.config)\n            .then((response) => response.json())\n           \n    }\n    }\n"]},"metadata":{},"sourceType":"module"}