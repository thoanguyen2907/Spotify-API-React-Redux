{"ast":null,"code":"import * as configs from '../constants/Config';\n\nconst queryString = require('query-string');\n\nexport default class SpotifyAxios {\n  static getArtists(id) {\n    let url = configs.BASE_URL + \"artists\" + id;\n    axios.get(url).then(response => {\n      // handle success\n      console.log(response);\n    }).catch(error => {\n      // handle error\n      {\n        this.handleError(error);\n      }\n    }); //    return  axios(url,SpotifyFetch.config)\n    //     .then((response) => response.json())        \n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}\nSpotifyAxios.config = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer ' + configs.API_KEY\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/shoptify 1/my-app/src/services/SpotifyAxios.js"],"names":["configs","queryString","require","SpotifyAxios","getArtists","id","url","BASE_URL","axios","get","then","response","console","log","catch","error","handleError","config","method","headers","API_KEY"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,eAAe,MAAMC,YAAN,CAAkB;AAO9B,SAAOC,UAAP,CAAkBC,EAAlB,EAAqB;AAEZ,QAAIC,GAAG,GAAGN,OAAO,CAACO,QAAR,GAAmB,SAAnB,GAA+BF,EAAzC;AACAG,IAAAA,KAAK,CAACC,GAAN,CAAUH,GAAV,EACTI,IADS,CACHC,QAAD,IAAc;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAJS,EAKTG,KALS,CAKFC,KAAD,IAAW;AAChB;AACA;AAAC,aAAKC,WAAL,CAAiBD,KAAjB;AAAwB;AAC1B,KARS,EAHY,CAYhB;AACA;AACH;;AACD,SAAOC,WAAP,CAAmBD,KAAnB,EAAyB;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;;AAxB4B;AAAZZ,Y,CACVc,M,GAAS;AACRC,EAAAA,MAAM,EAAC,KADC;AAERC,EAAAA,OAAO,EAAE;AACL,qBAAiB,YAAYnB,OAAO,CAACoB;AADhC;AAFD,C","sourcesContent":["import * as configs from '../constants/Config'; \nconst queryString = require('query-string');\n\nexport default class SpotifyAxios{\n    static config = {\n            method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              }\n        }\n   static getArtists(id){\n   \n            let url = configs.BASE_URL + \"artists\" + id;\n            axios.get(url)\n  .then((response) => {\n    // handle success\n    console.log(response);\n  })\n  .catch((error) => {\n    // handle error\n    {this.handleError(error)}\n  })\n        //    return  axios(url,SpotifyFetch.config)\n        //     .then((response) => response.json())        \n    }\n    static handleError(error){\n        console.log(error)\n    }\n    }\n"]},"metadata":{},"sourceType":"module"}