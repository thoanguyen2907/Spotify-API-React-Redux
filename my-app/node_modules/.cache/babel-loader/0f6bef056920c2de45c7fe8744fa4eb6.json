{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/React Zendvn/shoptify/shoptify 1/my-app/src/components/ArtistList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as configs from './../constants/Config';\nimport SpotifyFetch from './../services/SpotifyFetch';\nimport Artist from './Artist';\n\nclass ArtistList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: []\n    };\n  }\n\n  searchArtist(query) {\n    if (query !== \"\") {\n      SpotifyFetch.getArtists(query).then(data => {\n        if (data !== undefined && data !== null) {\n          this.setState({\n            artists: data.artists.items\n          });\n        }\n\n        console.log(data.artists.items);\n      });\n    } else {\n      this.setState({\n        artists: []\n      });\n    }\n  } // UNSAFE_componentWillReceiveProps(nextProps) {\n  //     this.searchArtist(nextProps.query);\n  // } \n\n\n  render() {\n    let {\n      artists\n    } = this.state;\n    let {\n      query\n    } = this.props;\n    let xhml = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Enter artist's name to start\");\n\n    if (artists.length > 0) {\n      xhml = artists.map((artist, index) => {\n        return React.createElement(Artist, {\n          key: index,\n          item: artist,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      });\n    } else if (query !== '') {\n      xhml = React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u cho \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, query));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, xhml);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    query: state.query\n  };\n};\n\nexport default connect(mapStateToProps, null)(ArtistList);","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/shoptify 1/my-app/src/components/ArtistList.js"],"names":["React","Component","connect","configs","SpotifyFetch","Artist","ArtistList","constructor","props","state","artists","searchArtist","query","getArtists","then","data","undefined","setState","items","console","log","render","xhml","length","map","artist","index","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC;AADD,KAAX;AAGH;;AACDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AACjB,QAAGA,KAAK,KAAK,EAAb,EAAgB;AACfR,MAAAA,YAAY,CAACS,UAAb,CAAwBD,KAAxB,EAA+BE,IAA/B,CAAqCC,IAAD,IAAU;AAC1C,YAAGA,IAAI,KAAGC,SAAP,IAAoBD,IAAI,KAAK,IAAhC,EAAqC;AACjC,eAAKE,QAAL,CAAc;AACVP,YAAAA,OAAO,EAAEK,IAAI,CAACL,OAAL,CAAaQ;AADZ,WAAd;AAGH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACL,OAAL,CAAaQ,KAAzB;AACH,OAPD;AAQA,KATD,MAUK;AACD,WAAKD,QAAL,CAAc;AACbP,QAAAA,OAAO,EAAC;AADK,OAAd;AAGH;AACH,GAvB8B,CAyB/B;AACA;AACA;;;AACAW,EAAAA,MAAM,GAAG;AACL,QAAI;AAACX,MAAAA;AAAD,QAAY,KAAKD,KAArB;AACA,QAAI;AAACG,MAAAA;AAAD,QAAU,KAAKJ,KAAnB;AACA,QAAIc,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAX;;AACA,QAAGZ,OAAO,CAACa,MAAR,GAAiB,CAApB,EAAsB;AAClBD,MAAAA,IAAI,GAAGZ,OAAO,CAACc,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAC/B,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,IAAI,EAAED,MAA1B;AAAkC,UAAA,KAAK,EAAEC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH,KAJD,MAIO,IAAGd,KAAK,KAAK,EAAb,EAAgB;AACvBU,MAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASV,KAAT,CAAzB,CAAP;AACC;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMU,IADN,CADJ;AAKH;;AA5C8B;;AA+CnC,MAAMK,eAAe,GAAGlB,KAAK,IAAI;AAC7B,SAAO;AACHG,IAAAA,KAAK,EAAEH,KAAK,CAACG;AADV,GAAP;AAGH,CAJD;;AAKA,eAAeV,OAAO,CAACyB,eAAD,EAAiB,IAAjB,CAAP,CAA8BrB,UAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as configs from './../constants/Config'; \nimport SpotifyFetch from './../services/SpotifyFetch';\nimport Artist from './Artist';\n\nclass ArtistList extends Component {\n    constructor(props){\n        super(props); \n        this.state={\n            artists:[]\n        }\n    }\n    searchArtist(query) {\n       if(query !== \"\"){\n        SpotifyFetch.getArtists(query).then((data) => {\n            if(data!==undefined && data !== null){\n                this.setState({\n                    artists: data.artists.items         \n                })    \n            }\n            console.log(data.artists.items)\n        })\n       } \n       else {\n           this.setState({\n            artists:[]\n           })\n       }\n    }   \n\n    // UNSAFE_componentWillReceiveProps(nextProps) {\n    //     this.searchArtist(nextProps.query);\n    // } \n    render() {\n        let {artists} = this.state;      \n        let {query} = this.props;\n        let xhml = <h3>Enter artist's name to start</h3>\n        if(artists.length > 0){\n            xhml = artists.map((artist,index)=>{\n                return <Artist key={index} item={artist} index={index}/>\n            })\n        } else if(query !== ''){\n        xhml = <h3>Không có dữ liệu cho <strong>{query}</strong></h3>\n        }\n        return (\n            <div className=\"row\" >           \n                 {xhml}\n            </div>\n        ) \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        query: state.query\n    }\n}\nexport default connect(mapStateToProps,null)(ArtistList);\n"]},"metadata":{},"sourceType":"module"}