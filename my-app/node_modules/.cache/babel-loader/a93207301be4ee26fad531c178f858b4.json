{"ast":null,"code":"import * as configs from './../constants/Config';\n\nconst queryString = require('query-string');\n\nexport default class SpotifyFetch {\n  static getArtists(query) {\n    let strParams = queryString.stringify({\n      type: 'artist',\n      limit: 2,\n      offset: 0\n    });\n    let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n    return fetch(url, SpotifyFetch.config).then(response => response.json());\n  }\n\n}\nSpotifyFetch.config = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer ' + configs.API_KEY\n  }\n};","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/spotify api/my-app/src/services/SpotifyFetch.js"],"names":["configs","queryString","require","SpotifyFetch","getArtists","query","strParams","stringify","type","limit","offset","url","BASE_URL","fetch","config","then","response","json","method","headers","API_KEY"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,eAAe,MAAMC,YAAN,CAAkB;AAO9B,SAAOC,UAAP,CAAkBC,KAAlB,EAAwB;AACpB,QAAIC,SAAS,GAAGL,WAAW,CAACM,SAAZ,CAAsB;AACjCC,MAAAA,IAAI,EAAC,QAD4B;AAEjCC,MAAAA,KAAK,EAAC,CAF2B;AAGjCC,MAAAA,MAAM,EAAC;AAH0B,KAAtB,CAAhB;AAMK,QAAIC,GAAG,GAAGX,OAAO,CAACY,QAAR,GAAmB,WAAnB,GAAiCP,KAAjC,GAAyC,GAAzC,GAA+CC,SAAzD;AACD,WAAQO,KAAK,CAACF,GAAD,EAAKR,YAAY,CAACW,MAAlB,CAAL,CACNC,IADM,CACAC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADb,CAAR;AAEN;;AAjB4B;AAAZd,Y,CACVW,M,GAAS;AACRI,EAAAA,MAAM,EAAC,KADC;AAERC,EAAAA,OAAO,EAAE;AACL,qBAAiB,YAAYnB,OAAO,CAACoB;AADhC;AAFD,C","sourcesContent":["import * as configs from './../constants/Config'; \nconst queryString = require('query-string');\n\nexport default class SpotifyFetch{\n    static config = {\n            method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              }\n        }\n   static getArtists(query){\n       let strParams = queryString.stringify({\n            type:'artist',\n            limit:2,\n            offset:0\n        }\n       );\n            let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n           return  fetch(url,SpotifyFetch.config)\n            .then((response) => response.json())        \n    }\n    }\n"]},"metadata":{},"sourceType":"module"}