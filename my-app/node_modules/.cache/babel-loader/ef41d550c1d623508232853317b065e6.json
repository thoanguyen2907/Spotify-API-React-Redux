{"ast":null,"code":"import * as configs from './../constants/Config';\n\nconst queryString = require('query-string'); // export default class SpotifyFetch{\n//     static config = {\n//             method:'GET',\n//             headers: {\n//                 'Authorization': 'Bearer ' + configs.API_KEY          \n//               }\n//         }\n//    static getArtists(query){\n//        let strParams = queryString.stringify({\n//             type:'artist',\n//             limit:2,\n//             offset:0\n//         }\n//        );\n//             let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n//            return  fetch(url,SpotifyFetch.config)\n//             .then((response) => response.json())        \n//     }\n//     }\n\n\nclass SpotifyFetch {\n  getConfig() {\n    let config = {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + configs.API_KEY\n      }\n    };\n    return config;\n  }\n\n  getArtists(query) {\n    let strParams = queryString.stringify({\n      type: 'artist',\n      limit: 2,\n      offset: 0\n    });\n    let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n    return fetch(url, SpotifyFetch.config).then(response => response.json());\n  }\n\n}\n\nexport default SpotifyFetch;","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/shoptify/spotify api/my-app/src/services/SpotifyFetch.js"],"names":["configs","queryString","require","SpotifyFetch","getConfig","config","method","headers","API_KEY","getArtists","query","strParams","stringify","type","limit","offset","url","BASE_URL","fetch","then","response","json"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACK,MAAMC,YAAN,CAAkB;AACfC,EAAAA,SAAS,GAAE;AACP,QAAIC,MAAM,GAAG;AAACC,MAAAA,MAAM,EAAC,KAAR;AACbC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYP,OAAO,CAACQ;AADhC;AADI,KAAb;AAIE,WAAOH,MAAP;AACL;;AACDI,EAAAA,UAAU,CAACC,KAAD,EAAO;AACb,QAAIC,SAAS,GAAGV,WAAW,CAACW,SAAZ,CAAsB;AAClCC,MAAAA,IAAI,EAAC,QAD6B;AAElCC,MAAAA,KAAK,EAAC,CAF4B;AAGlCC,MAAAA,MAAM,EAAC;AAH2B,KAAtB,CAAhB;AAKA,QAAIC,GAAG,GAAGhB,OAAO,CAACiB,QAAR,GAAmB,WAAnB,GAAiCP,KAAjC,GAAyC,GAAzC,GAA+CC,SAAzD;AACA,WAAQO,KAAK,CAACF,GAAD,EAAKb,YAAY,CAACE,MAAlB,CAAL,CACPc,IADO,CACDC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADZ,CAAR;AAEH;;AAjBc;;AAoBf,eAAelB,YAAf","sourcesContent":["import * as configs from './../constants/Config'; \nconst queryString = require('query-string');\n\n// export default class SpotifyFetch{\n//     static config = {\n//             method:'GET',\n//             headers: {\n//                 'Authorization': 'Bearer ' + configs.API_KEY          \n//               }\n//         }\n//    static getArtists(query){\n//        let strParams = queryString.stringify({\n//             type:'artist',\n//             limit:2,\n//             offset:0\n//         }\n//        );\n//             let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n//            return  fetch(url,SpotifyFetch.config)\n//             .then((response) => response.json())        \n//     }\n//     }\n     class SpotifyFetch{\n        getConfig(){\n            let config = {method:'GET',\n            headers: {\n                'Authorization': 'Bearer ' + configs.API_KEY          \n              } }\n              return config\n        }\n        getArtists(query){\n            let strParams = queryString.stringify({\n                type:'artist',\n                limit:2,\n                offset:0\n            })\n            let url = configs.BASE_URL + \"search?q=\" + query + \"&\" + strParams;\n            return  fetch(url,SpotifyFetch.config)\n            .then((response) => response.json())        \n        }   \n              \n        }\n        export default SpotifyFetch; \n        \n"]},"metadata":{},"sourceType":"module"}